name: Release
on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: dotnet pack core
      run: dotnet pack ./src/XPing365.Sdk.Core/XPing365.Sdk.Core.csproj -c Release -p:NuspecProperties="version=${GITHUB_REF_NAME#v}" -o _build/nuget
    - name: dotnet pack availability
      run: dotnet pack ./src/XPing365.Sdk.Availability/XPing365.Sdk.Availability.csproj -c Release -p:NuspecProperties="version=${GITHUB_REF_NAME#v}" -o _build/nuget
    - uses: actions/upload-artifact@v4
      with:
        name: nuget
        path: _build/nuget

  publish:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    steps:
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.x
      - uses: actions/download-artifact@v4
        with:
          name: nuget
          path: _build/nuget
      - name: Publish NuGet packages
        run: |
          dotnet nuget push _build/nuget/*.nupkg --api-key "${{ secrets.NUGET_KEY }}" --skip-duplicate --source https://api.nuget.org/v3/index.json
      - name: Upload GitHub release
        run: |
          gh release upload --repo XPing365/xping365-sdk ${GITHUB_REF_NAME} _build/nuget/XPing365.Core.${GITHUB_REF_NAME#v}.nupkg
          gh release upload --repo XPing365/xping365-sdk ${GITHUB_REF_NAME} _build/nuget/XPing365.Availability.${GITHUB_REF_NAME}.nupkg
        env:
          GH_TOKEN: ${{ github.token }}

  publish-docs:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
    permissions:
      pages: write
      id-token: write
    # Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
    # However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
    concurrency:
      group: "pages"
      cancel-in-progress: false
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Dotnet Setup
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.x
    - run: dotnet tool update -g docfx
    - run: docfx ./docs/docfx.json  
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './docs/_site'
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
