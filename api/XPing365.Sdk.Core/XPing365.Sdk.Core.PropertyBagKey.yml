### YamlMime:ManagedReference
items:
- uid: XPing365.Sdk.Core.PropertyBagKey
  commentId: T:XPing365.Sdk.Core.PropertyBagKey
  id: PropertyBagKey
  parent: XPing365.Sdk.Core
  children:
  - XPing365.Sdk.Core.PropertyBagKey.#ctor(System.String)
  - XPing365.Sdk.Core.PropertyBagKey.Equals(System.Object)
  - XPing365.Sdk.Core.PropertyBagKey.Equals(XPing365.Sdk.Core.PropertyBagKey)
  - XPing365.Sdk.Core.PropertyBagKey.GetHashCode
  - XPing365.Sdk.Core.PropertyBagKey.op_Equality(XPing365.Sdk.Core.PropertyBagKey,XPing365.Sdk.Core.PropertyBagKey)
  - XPing365.Sdk.Core.PropertyBagKey.op_Inequality(XPing365.Sdk.Core.PropertyBagKey,XPing365.Sdk.Core.PropertyBagKey)
  langs:
  - csharp
  - vb
  name: PropertyBagKey
  nameWithType: PropertyBagKey
  fullName: XPing365.Sdk.Core.PropertyBagKey
  type: Class
  source:
    remote:
      path: src/XPing365.Sdk.Core/PropertyBagKey.cs
      branch: main
      repo: https://github.com/XPing365/xping365-sdk.git
    id: PropertyBagKey
    path: src/XPing365.Sdk.Core/PropertyBagKey.cs
    startLine: 13
  assemblies:
  - XPing365.Sdk.Core
  namespace: XPing365.Sdk.Core
  summary: >-
    The PropertyBagKey class is used to represent a key in a <xref href="XPing365.Sdk.Core.PropertyBag" data-throw-if-not-resolved="false"></xref>. 

    The IEquatable&lt;PropertyBagKey?&gt; interface is implemented to allow for comparison of PropertyBagKey instances.
  example: []
  syntax:
    content: 'public class PropertyBagKey : IEquatable<PropertyBagKey?>'
    content.vb: Public Class PropertyBagKey Implements IEquatable(Of PropertyBagKey)
  inheritance:
  - System.Object
  implements:
  - System.IEquatable{XPing365.Sdk.Core.PropertyBagKey}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: XPing365.Sdk.Core.PropertyBagKey.#ctor(System.String)
  commentId: M:XPing365.Sdk.Core.PropertyBagKey.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: XPing365.Sdk.Core.PropertyBagKey
  langs:
  - csharp
  - vb
  name: PropertyBagKey(string)
  nameWithType: PropertyBagKey.PropertyBagKey(string)
  fullName: XPing365.Sdk.Core.PropertyBagKey.PropertyBagKey(string)
  type: Constructor
  source:
    remote:
      path: src/XPing365.Sdk.Core/PropertyBagKey.cs
      branch: main
      repo: https://github.com/XPing365/xping365-sdk.git
    id: .ctor
    path: src/XPing365.Sdk.Core/PropertyBagKey.cs
    startLine: 13
  assemblies:
  - XPing365.Sdk.Core
  namespace: XPing365.Sdk.Core
  summary: >-
    The PropertyBagKey class is used to represent a key in a <xref href="XPing365.Sdk.Core.PropertyBag" data-throw-if-not-resolved="false"></xref>. 

    The IEquatable&lt;PropertyBagKey?&gt; interface is implemented to allow for comparison of PropertyBagKey instances.
  example: []
  syntax:
    content: public PropertyBagKey(string key)
    parameters:
    - id: key
      type: System.String
      description: >-
        The key parameter represents the string value of the PropertyBagKey instance, which is used to 

        identify this instance in a <xref href="XPing365.Sdk.Core.PropertyBag" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Sub New(key As String)
  overload: XPing365.Sdk.Core.PropertyBagKey.#ctor*
  nameWithType.vb: PropertyBagKey.New(String)
  fullName.vb: XPing365.Sdk.Core.PropertyBagKey.New(String)
  name.vb: New(String)
- uid: XPing365.Sdk.Core.PropertyBagKey.Equals(System.Object)
  commentId: M:XPing365.Sdk.Core.PropertyBagKey.Equals(System.Object)
  id: Equals(System.Object)
  parent: XPing365.Sdk.Core.PropertyBagKey
  langs:
  - csharp
  - vb
  name: Equals(object?)
  nameWithType: PropertyBagKey.Equals(object?)
  fullName: XPing365.Sdk.Core.PropertyBagKey.Equals(object?)
  type: Method
  source:
    remote:
      path: src/XPing365.Sdk.Core/PropertyBagKey.cs
      branch: main
      repo: https://github.com/XPing365/xping365-sdk.git
    id: Equals
    path: src/XPing365.Sdk.Core/PropertyBagKey.cs
    startLine: 18
  assemblies:
  - XPing365.Sdk.Core
  namespace: XPing365.Sdk.Core
  summary: Determines whether the specified object is equal to the current object.
  example: []
  syntax:
    content: public override bool Equals(object? obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with the current object.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the specified object  is equal to the current object; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: XPing365.Sdk.Core.PropertyBagKey.Equals*
  nameWithType.vb: PropertyBagKey.Equals(Object)
  fullName.vb: XPing365.Sdk.Core.PropertyBagKey.Equals(Object)
  name.vb: Equals(Object)
- uid: XPing365.Sdk.Core.PropertyBagKey.Equals(XPing365.Sdk.Core.PropertyBagKey)
  commentId: M:XPing365.Sdk.Core.PropertyBagKey.Equals(XPing365.Sdk.Core.PropertyBagKey)
  id: Equals(XPing365.Sdk.Core.PropertyBagKey)
  parent: XPing365.Sdk.Core.PropertyBagKey
  langs:
  - csharp
  - vb
  name: Equals(PropertyBagKey?)
  nameWithType: PropertyBagKey.Equals(PropertyBagKey?)
  fullName: XPing365.Sdk.Core.PropertyBagKey.Equals(XPing365.Sdk.Core.PropertyBagKey?)
  type: Method
  source:
    remote:
      path: src/XPing365.Sdk.Core/PropertyBagKey.cs
      branch: main
      repo: https://github.com/XPing365/xping365-sdk.git
    id: Equals
    path: src/XPing365.Sdk.Core/PropertyBagKey.cs
    startLine: 23
  assemblies:
  - XPing365.Sdk.Core
  namespace: XPing365.Sdk.Core
  summary: Indicates whether the current object is equal to another object of the same type.
  example: []
  syntax:
    content: public bool Equals(PropertyBagKey? other)
    parameters:
    - id: other
      type: XPing365.Sdk.Core.PropertyBagKey
      description: An object to compare with this object.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the current object is equal to the <code class="paramref">other</code> parameter; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function Equals(other As PropertyBagKey) As Boolean
  overload: XPing365.Sdk.Core.PropertyBagKey.Equals*
  implements:
  - System.IEquatable{XPing365.Sdk.Core.PropertyBagKey}.Equals(XPing365.Sdk.Core.PropertyBagKey)
  nameWithType.vb: PropertyBagKey.Equals(PropertyBagKey)
  fullName.vb: XPing365.Sdk.Core.PropertyBagKey.Equals(XPing365.Sdk.Core.PropertyBagKey)
  name.vb: Equals(PropertyBagKey)
- uid: XPing365.Sdk.Core.PropertyBagKey.GetHashCode
  commentId: M:XPing365.Sdk.Core.PropertyBagKey.GetHashCode
  id: GetHashCode
  parent: XPing365.Sdk.Core.PropertyBagKey
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: PropertyBagKey.GetHashCode()
  fullName: XPing365.Sdk.Core.PropertyBagKey.GetHashCode()
  type: Method
  source:
    remote:
      path: src/XPing365.Sdk.Core/PropertyBagKey.cs
      branch: main
      repo: https://github.com/XPing365/xping365-sdk.git
    id: GetHashCode
    path: src/XPing365.Sdk.Core/PropertyBagKey.cs
    startLine: 28
  assemblies:
  - XPing365.Sdk.Core
  namespace: XPing365.Sdk.Core
  summary: Serves as the default hash function.
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: A hash code for the current object.
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.Object.GetHashCode
  overload: XPing365.Sdk.Core.PropertyBagKey.GetHashCode*
- uid: XPing365.Sdk.Core.PropertyBagKey.op_Equality(XPing365.Sdk.Core.PropertyBagKey,XPing365.Sdk.Core.PropertyBagKey)
  commentId: M:XPing365.Sdk.Core.PropertyBagKey.op_Equality(XPing365.Sdk.Core.PropertyBagKey,XPing365.Sdk.Core.PropertyBagKey)
  id: op_Equality(XPing365.Sdk.Core.PropertyBagKey,XPing365.Sdk.Core.PropertyBagKey)
  parent: XPing365.Sdk.Core.PropertyBagKey
  langs:
  - csharp
  - vb
  name: operator ==(PropertyBagKey?, PropertyBagKey?)
  nameWithType: PropertyBagKey.operator ==(PropertyBagKey?, PropertyBagKey?)
  fullName: XPing365.Sdk.Core.PropertyBagKey.operator ==(XPing365.Sdk.Core.PropertyBagKey?, XPing365.Sdk.Core.PropertyBagKey?)
  type: Operator
  source:
    remote:
      path: src/XPing365.Sdk.Core/PropertyBagKey.cs
      branch: main
      repo: https://github.com/XPing365/xping365-sdk.git
    id: op_Equality
    path: src/XPing365.Sdk.Core/PropertyBagKey.cs
    startLine: 40
  assemblies:
  - XPing365.Sdk.Core
  namespace: XPing365.Sdk.Core
  summary: >-
    Overloads the == operator and returns a boolean value indicating whether the two specified PropertyBagKey 

    instances are equal.
  example: []
  syntax:
    content: public static bool operator ==(PropertyBagKey? left, PropertyBagKey? right)
    parameters:
    - id: left
      type: XPing365.Sdk.Core.PropertyBagKey
      description: The left operand of the comparison operator
    - id: right
      type: XPing365.Sdk.Core.PropertyBagKey
      description: The right operand of the comparison operator
    return:
      type: System.Boolean
      description: Boolean value that indicates whether the left parameter is equal to the right parameter
    content.vb: Public Shared Operator =(left As PropertyBagKey, right As PropertyBagKey) As Boolean
  overload: XPing365.Sdk.Core.PropertyBagKey.op_Equality*
  nameWithType.vb: PropertyBagKey.=(PropertyBagKey, PropertyBagKey)
  fullName.vb: XPing365.Sdk.Core.PropertyBagKey.=(XPing365.Sdk.Core.PropertyBagKey, XPing365.Sdk.Core.PropertyBagKey)
  name.vb: =(PropertyBagKey, PropertyBagKey)
- uid: XPing365.Sdk.Core.PropertyBagKey.op_Inequality(XPing365.Sdk.Core.PropertyBagKey,XPing365.Sdk.Core.PropertyBagKey)
  commentId: M:XPing365.Sdk.Core.PropertyBagKey.op_Inequality(XPing365.Sdk.Core.PropertyBagKey,XPing365.Sdk.Core.PropertyBagKey)
  id: op_Inequality(XPing365.Sdk.Core.PropertyBagKey,XPing365.Sdk.Core.PropertyBagKey)
  parent: XPing365.Sdk.Core.PropertyBagKey
  langs:
  - csharp
  - vb
  name: operator !=(PropertyBagKey?, PropertyBagKey?)
  nameWithType: PropertyBagKey.operator !=(PropertyBagKey?, PropertyBagKey?)
  fullName: XPing365.Sdk.Core.PropertyBagKey.operator !=(XPing365.Sdk.Core.PropertyBagKey?, XPing365.Sdk.Core.PropertyBagKey?)
  type: Operator
  source:
    remote:
      path: src/XPing365.Sdk.Core/PropertyBagKey.cs
      branch: main
      repo: https://github.com/XPing365/xping365-sdk.git
    id: op_Inequality
    path: src/XPing365.Sdk.Core/PropertyBagKey.cs
    startLine: 52
  assemblies:
  - XPing365.Sdk.Core
  namespace: XPing365.Sdk.Core
  summary: >-
    Overloads the != operator and returns a boolean value indicating whether the two specified PropertyBagKey 

    instances are not equal.
  example: []
  syntax:
    content: public static bool operator !=(PropertyBagKey? left, PropertyBagKey? right)
    parameters:
    - id: left
      type: XPing365.Sdk.Core.PropertyBagKey
      description: The left operand of the comparison operator
    - id: right
      type: XPing365.Sdk.Core.PropertyBagKey
      description: The right operand of the comparison operator
    return:
      type: System.Boolean
      description: Boolean value that indicates whether the left parameter is not equal to the right parameter
    content.vb: Public Shared Operator <>(left As PropertyBagKey, right As PropertyBagKey) As Boolean
  overload: XPing365.Sdk.Core.PropertyBagKey.op_Inequality*
  nameWithType.vb: PropertyBagKey.<>(PropertyBagKey, PropertyBagKey)
  fullName.vb: XPing365.Sdk.Core.PropertyBagKey.<>(XPing365.Sdk.Core.PropertyBagKey, XPing365.Sdk.Core.PropertyBagKey)
  name.vb: <>(PropertyBagKey, PropertyBagKey)
references:
- uid: XPing365.Sdk.Core.PropertyBag
  commentId: T:XPing365.Sdk.Core.PropertyBag
  parent: XPing365.Sdk.Core
  href: XPing365.Sdk.Core.PropertyBag.html
  name: PropertyBag
  nameWithType: PropertyBag
  fullName: XPing365.Sdk.Core.PropertyBag
- uid: XPing365.Sdk.Core
  commentId: N:XPing365.Sdk.Core
  href: XPing365.html
  name: XPing365.Sdk.Core
  nameWithType: XPing365.Sdk.Core
  fullName: XPing365.Sdk.Core
  spec.csharp:
  - uid: XPing365
    name: XPing365
    href: XPing365.html
  - name: .
  - uid: XPing365.Sdk
    name: Sdk
    href: XPing365.Sdk.html
  - name: .
  - uid: XPing365.Sdk.Core
    name: Core
    href: XPing365.Sdk.Core.html
  spec.vb:
  - uid: XPing365
    name: XPing365
    href: XPing365.html
  - name: .
  - uid: XPing365.Sdk
    name: Sdk
    href: XPing365.Sdk.html
  - name: .
  - uid: XPing365.Sdk.Core
    name: Core
    href: XPing365.Sdk.Core.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.IEquatable{XPing365.Sdk.Core.PropertyBagKey}
  commentId: T:System.IEquatable{XPing365.Sdk.Core.PropertyBagKey}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<PropertyBagKey>
  nameWithType: IEquatable<PropertyBagKey>
  fullName: System.IEquatable<XPing365.Sdk.Core.PropertyBagKey>
  nameWithType.vb: IEquatable(Of PropertyBagKey)
  fullName.vb: System.IEquatable(Of XPing365.Sdk.Core.PropertyBagKey)
  name.vb: IEquatable(Of PropertyBagKey)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: XPing365.Sdk.Core.PropertyBagKey
    name: PropertyBagKey
    href: XPing365.Sdk.Core.PropertyBagKey.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: XPing365.Sdk.Core.PropertyBagKey
    name: PropertyBagKey
    href: XPing365.Sdk.Core.PropertyBagKey.html
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: XPing365.Sdk.Core.PropertyBagKey.#ctor*
  commentId: Overload:XPing365.Sdk.Core.PropertyBagKey.#ctor
  href: XPing365.Sdk.Core.PropertyBagKey.html#XPing365_Sdk_Core_PropertyBagKey__ctor_System_String_
  name: PropertyBagKey
  nameWithType: PropertyBagKey.PropertyBagKey
  fullName: XPing365.Sdk.Core.PropertyBagKey.PropertyBagKey
  nameWithType.vb: PropertyBagKey.New
  fullName.vb: XPing365.Sdk.Core.PropertyBagKey.New
  name.vb: New
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: XPing365.Sdk.Core.PropertyBagKey.Equals*
  commentId: Overload:XPing365.Sdk.Core.PropertyBagKey.Equals
  href: XPing365.Sdk.Core.PropertyBagKey.html#XPing365_Sdk_Core_PropertyBagKey_Equals_System_Object_
  name: Equals
  nameWithType: PropertyBagKey.Equals
  fullName: XPing365.Sdk.Core.PropertyBagKey.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.IEquatable{XPing365.Sdk.Core.PropertyBagKey}.Equals(XPing365.Sdk.Core.PropertyBagKey)
  commentId: M:System.IEquatable{XPing365.Sdk.Core.PropertyBagKey}.Equals(XPing365.Sdk.Core.PropertyBagKey)
  parent: System.IEquatable{XPing365.Sdk.Core.PropertyBagKey}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(PropertyBagKey)
  nameWithType: IEquatable<PropertyBagKey>.Equals(PropertyBagKey)
  fullName: System.IEquatable<XPing365.Sdk.Core.PropertyBagKey>.Equals(XPing365.Sdk.Core.PropertyBagKey)
  nameWithType.vb: IEquatable(Of PropertyBagKey).Equals(PropertyBagKey)
  fullName.vb: System.IEquatable(Of XPing365.Sdk.Core.PropertyBagKey).Equals(XPing365.Sdk.Core.PropertyBagKey)
  spec.csharp:
  - uid: System.IEquatable{XPing365.Sdk.Core.PropertyBagKey}.Equals(XPing365.Sdk.Core.PropertyBagKey)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: XPing365.Sdk.Core.PropertyBagKey
    name: PropertyBagKey
    href: XPing365.Sdk.Core.PropertyBagKey.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{XPing365.Sdk.Core.PropertyBagKey}.Equals(XPing365.Sdk.Core.PropertyBagKey)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: XPing365.Sdk.Core.PropertyBagKey
    name: PropertyBagKey
    href: XPing365.Sdk.Core.PropertyBagKey.html
  - name: )
- uid: XPing365.Sdk.Core.PropertyBagKey
  commentId: T:XPing365.Sdk.Core.PropertyBagKey
  parent: XPing365.Sdk.Core
  href: XPing365.Sdk.Core.PropertyBagKey.html
  name: PropertyBagKey
  nameWithType: PropertyBagKey
  fullName: XPing365.Sdk.Core.PropertyBagKey
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: XPing365.Sdk.Core.PropertyBagKey.GetHashCode*
  commentId: Overload:XPing365.Sdk.Core.PropertyBagKey.GetHashCode
  href: XPing365.Sdk.Core.PropertyBagKey.html#XPing365_Sdk_Core_PropertyBagKey_GetHashCode
  name: GetHashCode
  nameWithType: PropertyBagKey.GetHashCode
  fullName: XPing365.Sdk.Core.PropertyBagKey.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: XPing365.Sdk.Core.PropertyBagKey.op_Equality*
  commentId: Overload:XPing365.Sdk.Core.PropertyBagKey.op_Equality
  href: XPing365.Sdk.Core.PropertyBagKey.html#XPing365_Sdk_Core_PropertyBagKey_op_Equality_XPing365_Sdk_Core_PropertyBagKey_XPing365_Sdk_Core_PropertyBagKey_
  name: operator ==
  nameWithType: PropertyBagKey.operator ==
  fullName: XPing365.Sdk.Core.PropertyBagKey.operator ==
  nameWithType.vb: PropertyBagKey.=
  fullName.vb: XPing365.Sdk.Core.PropertyBagKey.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: XPing365.Sdk.Core.PropertyBagKey.op_Equality*
    name: ==
    href: XPing365.Sdk.Core.PropertyBagKey.html#XPing365_Sdk_Core_PropertyBagKey_op_Equality_XPing365_Sdk_Core_PropertyBagKey_XPing365_Sdk_Core_PropertyBagKey_
- uid: XPing365.Sdk.Core.PropertyBagKey.op_Inequality*
  commentId: Overload:XPing365.Sdk.Core.PropertyBagKey.op_Inequality
  href: XPing365.Sdk.Core.PropertyBagKey.html#XPing365_Sdk_Core_PropertyBagKey_op_Inequality_XPing365_Sdk_Core_PropertyBagKey_XPing365_Sdk_Core_PropertyBagKey_
  name: operator !=
  nameWithType: PropertyBagKey.operator !=
  fullName: XPing365.Sdk.Core.PropertyBagKey.operator !=
  nameWithType.vb: PropertyBagKey.<>
  fullName.vb: XPing365.Sdk.Core.PropertyBagKey.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: XPing365.Sdk.Core.PropertyBagKey.op_Inequality*
    name: '!='
    href: XPing365.Sdk.Core.PropertyBagKey.html#XPing365_Sdk_Core_PropertyBagKey_op_Inequality_XPing365_Sdk_Core_PropertyBagKey_XPing365_Sdk_Core_PropertyBagKey_
